service: stlog-sftp-rest-invoker

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "2"

custom:
  serverless-offline:
    useChildProcesses: true
  log-level:
    dev: debug
    prod: info

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  apiName: ${self:service}
  region: ap-southeast-1
  environment:
    LOG_LEVEL: ${self:custom.log-level.${self:provider.stage}}
    SLIFT_PULL_FILE_URL: https://bpdaxdii5h.execute-api.ap-southeast-1.amazonaws.com:443/dev
    SLIFT_PROCESS_FILE_URL: https://rb3guxooxl.execute-api.ap-southeast-1.amazonaws.com:443/${self:provider.stage}
    SLIFT_GENERATE_POD_URL: https://x1xpx0mzck.execute-api.ap-southeast-1.amazonaws.com:443/${self:provider.stage}
    SLIFT_PUSH_FILE_URL: https://bpdaxdii5h.execute-api.ap-southeast-1.amazonaws.com:443/dev
    SLIFT_PULL_FILE_PATH: /sftp/pull
    SLIFT_PROCESS_FILE_PATH: /sftp/process
    SLIFT_GENERATE_POD_PATH: /sftp/generate_pod
    SLIFT_PUSH_FILE_PATH: /sftp/push

plugins:
  - serverless-plugin-typescript
  - serverless-offline

functions:
  sftpPullFiles:
    handler: handler.sftpPullFiles
    timeout: 60
    events:
      - http:
          path: sftpPullFiles
          method: post
  sftpProcessFiles:
    handler: handler.sftpProcessFiles
    timeout: 60
    events:
      - http:
          path: sftpProcessFiles
          method: post
  sftpGeneratePod:
    handler: handler.sftpGeneratePod
    timeout: 60
    events:
      - http:
          path: sftpGeneratePod
          method: post
  sftpPushFiles:
    handler: handler.sftpPushFiles
    timeout: 60
    events:
      - http:
          path: sftpPushFiles
          method: post
